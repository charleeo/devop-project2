AWSTemplateFormatVersion: "2010-09-09"
Description: Charles Otaru Network stack Udagram-Udacity.
Parameters:
  ProjectName:
    Description: "This will be prefixed to all resources names."
    Type: String
  VpcCIDRBlock:
    Description: Ip range for the VPC (CIDRBlock notation)
    Type: String
  PublicSubnet1CIDRBlock:
    Description: Ip range for the public subnet in the first Availability Zone
    Type: String
  PublicSubnet2CIDRBlock:
    Description: Ip range for the public subnet in the second Availability Zone
    Type: String
  PrivateSubnet1CIDRBlock:
    Description: Ip range for the private subnet in the first Availability Zone
    Type: String
  PrivateSubnet2CIDRBlock:
    Description: Ip range for the private subnet in the second Availability Zone
    Type: String

Resources:
# THE VPC DEFINITION
  UdagramUdacityVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDRBlock
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-VPC
  
  #INTERNET GATEWAY FOR THE VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - InternetGateway
  
  vpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref UdagramUdacityVPC
  
  #PUBLIC/PRIVATE SUBNETS STRUCTURE
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet1CIDRBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - PublicSubnet AV1
      VpcId: !Ref UdagramUdacityVPC
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet2CIDRBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - PublicSubnet AV2
      VpcId: !Ref UdagramUdacityVPC
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet1CIDRBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - PrivateSubnet AV1
      VpcId: !Ref UdagramUdacityVPC
  
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet2CIDRBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - PrivateSubnet AV2
      VpcId: !Ref UdagramUdacityVPC

  # DEFINING NatGateways
  NatGateway1EIP:
    DependsOn: vpcInternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - ElasticIp NatGateway AV1
  
  NatGateway2EIP:
    DependsOn: vpcInternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - ElasticIp NatGateway AV2
  
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGateway1EIP
          - AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - NatGateway in AV1
  
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGateway2EIP
          - AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - NatGateway in AV2
  
  # DEFINING ROUTING ROULES
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref UdagramUdacityVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Public RouteTable
  
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: vpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref UdagramUdacityVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Private RouteTable for AZ1
  
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref UdagramUdacityVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Private RouteTable for AZ2
  
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: vpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1
  
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: vpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2
  
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

###############################################################################
Outputs:
  VPC:
    Description: the created vpc
    Value: !Ref UdagramUdacityVPC
    Export:
      Name: !Sub ${ProjectName}-VpcId
  PublicSubnets:
    Description: List of the public subnets
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-PubSubNets
  PrivateSubnets:
    Description: List of the private subnets
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-PrivateSubNets
  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ProjectName}-PublicSubNet1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ProjectName}-PublicSubNet2

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${ProjectName}-Priv1SubNet

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${ProjectName}-Priv2SubNet
